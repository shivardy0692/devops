{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Deploy Basic AWS Infra",
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [{
				"Label": {
					"default": "VPC configuration parameters"
				},
				"Parameters": ["VPCCIDR",
				"PublicSubnetCIDR",
				"SSHLocation","VPCNAME","AMIID","KEYPAIR","TAGNAME"]
			}],
			"ParameterLabels": {
				"VPCCIDR": {
					"default": "Enter CIDR of new VPC"
				},
				"PublicSubnetCIDR": {
					"default": "Enter CIDR of the public subnet"
				},
				"SSHLocation": {
					"default": "Subnet allowed to ssh on TCP to public subnet"
				},
				"VPCNAME": {
					"default": "Lable for VPC Name"
				},
				"AMIID": {
					"default": "Lable for AMI-ID"
				},
				"KEYPAIR": {
					"default": "Lable for KEYPAIR"
				},
				"TAGNAME": {
					"default": "Name of Instance"
				}
			}
		}
	},
	"Parameters": {
		"VPCCIDR": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default": "10.10.0.0/16",
			"Description": "CIDR block for entire VPC.",
			"Type": "String"
		},
		"PublicSubnetCIDR": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default": "10.10.10.0/24",
			"Description": "CIDR block for the public subnet",
			"Type": "String"
		},
		"SSHLocation": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/0-28",
			"Default": "0.0.0.0/0",
			"Description": "Network allowed to ssh to instances in public subnet.",
			"Type": "String"
		},
		"VPCNAME": {
			"Default": "Test-VPC",
			"Description": "Enter the VPC Name",
			"Type": "String"
		},
		"AMIID": {
			"Default": "ami-0a0ad6b70e61be944",
			"Description": "AMI-ID for the EC2 Instance",
			"Type": "String"
		},
		"KEYPAIR": {
			"Default": "nov2020",
			"Description": "Keypair for the EC2 Instance",
			"Type": "String"
		},
		"TAGNAME": {
			"Default": "TEST-SERVER",
			"Description": "Instance Name",
			"Type": "String"
		}
	},
	"Mappings": {
		
	},
	"Resources": {
		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"EnableDnsSupport": "true",
				"EnableDnsHostnames": "true",
				"CidrBlock": {
					"Ref": "VPCCIDR"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {"Ref": "VPCNAME"}
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{
					"Key": "Name",
					"Value": "IGW"
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		"PublicSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PublicSubnetCIDR"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": ["",
						["Public ",
						{
							"Ref": "PublicSubnetCIDR"
						}]]
					}
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		"AttachGateway": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"PublicSubnetRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": ["",
						["Public ",
						{
							"Ref": "PublicSubnetCIDR"
						}]]
					}
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		"PublicRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "AttachGateway",
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicSubnetRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"PublicSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet"
				},
				"RouteTableId": {
					"Ref": "PublicSubnetRouteTable"
				}
			}
		},
		"PublicInstanceSG": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"GroupDescription": "Enable SSH access via port 22",
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "22",
					"ToPort": "22",
					"CidrIp": {
						"Ref": "SSHLocation"
					}
				},
				{
					"IpProtocol": "tcp",
					"FromPort": "80",
					"ToPort": "80",
					"CidrIp": "0.0.0.0/0"
				}],
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": ["",
						["PublicSG ",
						{
							"Ref": "VPCCIDR"
						}]]
					}
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		  "WebServer": {
          "Type": "AWS::EC2::Instance",  
          "Properties": {
          "ImageId"            : {"Ref": "AMIID"},
          "InstanceType"       : "t2.micro",
          "KeyName"            : {"Ref": "KEYPAIR"},
		  "Tags":[
	       {
		   "Key"                : "Name",
		   "Value"              : {"Ref": "TAGNAME"}
		   }
	       ],
          "NetworkInterfaces" : [{
          "AssociatePublicIpAddress" : "true",
          "DeviceIndex"              : "0",
          "DeleteOnTermination"      : "true",
          "SubnetId"                 : {"Ref": "PublicSubnet"},
          "GroupSet"                 : [{"Ref": "PublicInstanceSG"}]
		  }]
      }
    }
	
	},
	"Outputs": {
		"VPCId": {
			"Description": "VPCId of the newly created VPC",
			"Value": {
				"Ref": "VPC"
			}
		},
		"VPCNAME": {
			"Description": "Name of the newly created VPC",
			"Value": {
				"Ref": "VPCNAME"
			}
		},
		"PublicSubnet": {
			"Description": "SubnetId of the public subnet",
			"Value": {
				"Ref": "PublicSubnet"
			}
		},
		"PublicSubnetRouteTable": {
			"Description": "Public route table",
			"Value": {
				"Ref": "PublicSubnetRouteTable"
			}
		},
		"PublicInstanceSG": {
			"Description": "SG for instances in public subnet",
			"Value": {
				"Ref": "PublicInstanceSG"
			}
		},
		"EC2ServerName": {
			"Description": "Output Name For EC2 Instance",
			"Value": {
				"Ref": "WebServer"
			}
		}
		
	}
}